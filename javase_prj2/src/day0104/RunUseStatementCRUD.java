package day0104;

import java.sql.SQLException;

import javax.swing.JOptionPane;

public class RunUseStatementCRUD { //DataAccessObject DB에 관련된 업무를 처리하는 클래스를 DAO라고 부름

	private UseStatementCRUD us_crud;

	public RunUseStatementCRUD() {
		us_crud = new UseStatementCRUD();
	}// RunUseStatementCRUD

	public void addCpDept() {
		String tempData = JOptionPane.showInputDialog("부서정보추가\n입력 예)부서번호, 부서명, 위치");
		if(tempData != null && !tempData.equals("")/*&&이기때문에 전항이 false이면 후항을 실행하지 않음*/) {
			String[] data = tempData.split(",");
			if(data.length!=3) {
				JOptionPane.showMessageDialog(null, "입력형식을 확인해 주세요");
				return;
			}//end if
			
			int deptno=0;
			String dname = "";
			String loc ="";
			
			try {
				deptno=Integer.parseInt(data[0]);
				dname=data[1];
				loc=data[2];
				
			}catch(NumberFormatException nfe) {
				JOptionPane.showMessageDialog(null, "부서번호는 숫자입니다");
				return;
			}//end catch
			//처리된 입력데이터를 VO에 설정하고
			CpDeptVO cdvo = new CpDeptVO(deptno, dname, loc);
			//VO의 값을 DB에 insert한다.
			try {
			us_crud.insertCpDept(cdvo);//추가성공
			JOptionPane.showMessageDialog(null, deptno+"번 부서정보 추가");
			}catch (SQLException se) {//예외
				
				String errMsg = "";
				switch(se.getErrorCode()) {
					case 1 : errMsg=deptno+"번 부서는 이미 존재합니다.";break;
					case 1438 : errMsg="부서번호는 두자리 입니다.";break;
					case 12899 : errMsg="부서명이나 위치가 너무 깁니다.";break;
					default: errMsg ="뎨둉합니다. 잠시 문제가 발생했습니다. 잠시 후 다시 시도해주세요";break;
				}//end switch
				JOptionPane.showMessageDialog(null, errMsg);
				se.printStackTrace();
			}//end catch
			
		}//end if
		
	}// addCpDept
	
	public void modifyCpDept() {
		String tempData = JOptionPane.showInputDialog("부서정보변경\n 부서번호에 일치하는 부서명과 위치를 변경합니다.\n입력 예)부서번호, 부서명, 위치");
		if(tempData != null && !tempData.equals("")/*&&이기때문에 전항이 false이면 후항을 실행하지 않음*/) {
			String[] data = tempData.split(",");
			if(data.length!=3) {
				JOptionPane.showMessageDialog(null, "입력형식을 확인해 주세요");
				return;
			}//end if
			
			int deptno=0;
			String dname = "";
			String loc ="";
			
			try {
				deptno=Integer.parseInt(data[0]);
				dname=data[1];
				loc=data[2];
				
			}catch(NumberFormatException nfe) {
				JOptionPane.showMessageDialog(null, "부서번호는 숫자입니다");
				return;
			}//end catch
			//처리된 입력데이터를 VO에 설정하고
			CpDeptVO cdvo = new CpDeptVO(deptno, dname, loc);
			//VO의 값을 DB에 update한다.
			try {
				String msg = "";
			if(us_crud.updateCpDept(cdvo)) {//변경된 레코드 존재
				msg = deptno+"번 부서의 정보를 변경하였습니다.";
			}else{ //변경된 레코드가 존재하지 않음
				 msg = deptno+"번 부서는 존재하지 않습니다.";
			}//end else
			JOptionPane.showMessageDialog(null, msg);
			
			}catch (SQLException se) {//예외
				
				String errMsg = "";
				switch(se.getErrorCode()) {
					case 12899 : errMsg="부서명이나 위치가 너무 깁니다.";break;
					default: errMsg ="뎨둉합니다. 잠시 문제가 발생했습니다. 잠시 후 다시 시도해주세요";break;
				}//end switch
				JOptionPane.showMessageDialog(null, errMsg);
				se.printStackTrace();
			}//end catch
			
		}//end if
		
		
	}// modifyCpDept
	
	public void removeCpDept() {
		String inputData = JOptionPane.showInputDialog("부서삭제\n삭제할 부서번호 입력");
		if(inputData!=null && !inputData.equals("")) {
			int deptno = 0;
			try {
				deptno=Integer.parseInt(inputData);
			}catch(NumberFormatException nfe) {
				JOptionPane.showMessageDialog(null, "부서번호는 숫자이어야 합니다.");
				return;
			}//end catch
			try {
				String msg = deptno+"번 부서는 존재하지 않습니다.";

			if(us_crud.deleteCpDept(deptno)) {
				msg = deptno+"번 부서 정보를 삭제하였습니다.";
			}//end if
		
			JOptionPane.showMessageDialog(null, msg);
			
		}catch(SQLException se) {
			JOptionPane.showMessageDialog(null, "죄송합니다. 문제가 발생하였습니다.");
			se.printStackTrace();
		}//end catch
			
		}//end if
	}// removeCpDept
	
	public void searchAllCpDept() {
		
	}// searchAllCpDept
	
	public void searchOneCpDept() {
		
	}// searchOneCpDept

	public static void main(String[] args) {
		RunUseStatementCRUD rus_crud = new RunUseStatementCRUD();

		boolean exitFlag = false;
		String inputMenu = "";
		do {
			inputMenu = JOptionPane.showInputDialog("메뉴선택\n1.부서추가 2.부서변경 3.부서삭제 4.전체부서조회 5.특정부서조회 6.종료");

			switch (inputMenu) {
			case "1":
				rus_crud.addCpDept();
				break;
			case "2":
				rus_crud.modifyCpDept();
				break;
			case "3":
				rus_crud.removeCpDept();
				break;
			case "4":
				rus_crud.searchAllCpDept();
				break;
			case "5":
				rus_crud.searchOneCpDept();
				break;
			case "6":
				exitFlag = true;
				break;
				
			default: JOptionPane.showMessageDialog(null, inputMenu+"는 제공되는 서비스가 아닙니다.");
				break;
			}//switch
			
		} while (!exitFlag);
		JOptionPane.showMessageDialog(null, "사용해주셔서 감사합니다");

	}// main

}// class
